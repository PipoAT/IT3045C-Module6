// <auto-generated />
using Assignment6.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment6.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240225210623_FourthMigration")]
    partial class FourthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Assignment6.Entities.Authors", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorID");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorID = 1,
                            FirstName = "Andrew",
                            LastName = "Pipo"
                        },
                        new
                        {
                            AuthorID = 2,
                            FirstName = "Steve",
                            LastName = "Jobs"
                        },
                        new
                        {
                            AuthorID = 3,
                            FirstName = "Bruce",
                            LastName = "Wayne"
                        },
                        new
                        {
                            AuthorID = 4,
                            FirstName = "Bob",
                            LastName = "Builder"
                        },
                        new
                        {
                            AuthorID = 5,
                            FirstName = "Santa",
                            LastName = "Claus"
                        });
                });

            modelBuilder.Entity("Assignment6.Entities.Books", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("AuthorID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("BookID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            Author = "Andrew Pipo",
                            AuthorID = 1,
                            GenreID = 1,
                            ISBN = "1",
                            Title = "Book 1"
                        },
                        new
                        {
                            BookID = 2,
                            Author = "Steve Jobs",
                            AuthorID = 2,
                            GenreID = 2,
                            ISBN = "2",
                            Title = "Book 2"
                        },
                        new
                        {
                            BookID = 3,
                            Author = "Bruce Wayne",
                            AuthorID = 3,
                            GenreID = 3,
                            ISBN = "3",
                            Title = "Book 3"
                        },
                        new
                        {
                            BookID = 4,
                            Author = "Bob Builder",
                            AuthorID = 4,
                            GenreID = 4,
                            ISBN = "4",
                            Title = "Book 4"
                        },
                        new
                        {
                            BookID = 5,
                            Author = "Santa Claus",
                            AuthorID = 5,
                            GenreID = 5,
                            ISBN = "5",
                            Title = "Book 5"
                        });
                });

            modelBuilder.Entity("Assignment6.Entities.Genres", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreID = 1,
                            Genre = "Fiction"
                        },
                        new
                        {
                            GenreID = 2,
                            Genre = "Non-Fiction"
                        },
                        new
                        {
                            GenreID = 3,
                            Genre = "Mystery"
                        },
                        new
                        {
                            GenreID = 4,
                            Genre = "Comedy"
                        },
                        new
                        {
                            GenreID = 5,
                            Genre = "Romance"
                        });
                });

            modelBuilder.Entity("AuthorsBooks", b =>
                {
                    b.Property<int>("AuthorsAuthorID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BooksBookID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AuthorsAuthorID", "BooksBookID");

                    b.HasIndex("BooksBookID");

                    b.ToTable("AuthorsBooks");
                });

            modelBuilder.Entity("BooksGenres", b =>
                {
                    b.Property<int>("BooksBookID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenresGenreID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BooksBookID", "GenresGenreID");

                    b.HasIndex("GenresGenreID");

                    b.ToTable("BooksGenres");
                });

            modelBuilder.Entity("AuthorsBooks", b =>
                {
                    b.HasOne("Assignment6.Entities.Authors", null)
                        .WithMany()
                        .HasForeignKey("AuthorsAuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment6.Entities.Books", null)
                        .WithMany()
                        .HasForeignKey("BooksBookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BooksGenres", b =>
                {
                    b.HasOne("Assignment6.Entities.Books", null)
                        .WithMany()
                        .HasForeignKey("BooksBookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment6.Entities.Genres", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
